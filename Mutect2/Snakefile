##GATK: v4.2.2.0

#https://gatk.broadinstitute.org/hc/en-us/articles/360035889791--How-to-Call-somatic-mutations-using-GATK4-Mutect2-Deprecated-
#https://gatk.broadinstitute.org/hc/en-us/articles/360035531132

sample_IDs, =glob_wildcards("path/to/BQSRTumorBamFolder/{sample_id}.tumor.bam")

rule all:
	input:
		expand("path/to/output/{sample}.somatic.mt2.SNVs.vcf.gz",sample=sample_IDs),
		expand("path/to/output/{sample}.somatic.mt2.INDELs.vcf.gz",sample=sample_IDs),

rule MT2:
	input:
		tumor_bam="path/to/BQSRTumorBamFolder/{sample}.tumor.bam",
		normal_bam="path/to/BQSRNormalBamFolder/{sample}.normal.bam",
		fa="resources/Homo_sapiens_assembly38.fasta",
		interval="resources/S31285117_Padded.list",
		germline_resource="resources/af-only-gnomad.hg38.vcf.gz",
		PON="resources/1000g_pon.hg38.vcf.gz"
	output:
		vcf=temp("path/to/output/{sample}.somatic.m2.vcf.gz"),
		f1r2=temp("path/to/output/{sample}.f1r2.tar.gz"),
		bamout=temp("path/to/output/{sample}.tumor_vs_normal.bam"),
	shell:
		"gatk Mutect2 -R {input.fa} -I {input.tumor_bam} -I {input.normal_bam} \
		-normal {wildcards.sample}.normal -tumor {wildcards.sample}.tumor \
		--germline-resource {input.germline_resource} --pon {input.PON} \
		-L {input.interval} --interval-padding 100 \
		--af-of-alleles-not-in-resource 0.0001 \
		--disable-read-filter MateOnSameContigOrNoMappedMateReadFilter \
		-O {output.vcf} --f1r2-tar-gz {output.f1r2} -bamout {output.bamout}"

rule LearnReadOrientationModel:
	input:
		"path/to/output/{sample}.f1r2.tar.gz"
	output:
		temp("path/to/output/{sample}.read-orientation-model.tar.gz")
	shell:
		"gatk LearnReadOrientationModel -I {input} -O {output}"

rule GetPileupSummaries_tumor:
	input:
		tumor_bam="path/to/BQSRTumorBamFolder/{sample}.tumor.bam",
		common_vcf="resources/small_exac_common_3.hg38.vcf.gz"
	output:
		temp("path/to/output/{sample}_tumor_getpileupsummaries.table")
	shell:
		"gatk GetPileupSummaries -I {input.tumor_bam} -V {input.common_vcf} \
		-L {input.common_vcf} -O {output}"

rule GetPileupSummaries_normal:
	input:
		normal_bam="path/to/BQSRNormalBamFolder/{sample}.normal.bam",
		common_vcf="resources/small_exac_common_3.hg38.vcf.gz"
	output:
		temp("path/to/output/{sample}_normal_getpileupsummaries.table")
	shell:
		"gatk GetPileupSummaries -I {input.normal_bam} -V {input.common_vcf} \
		-L {input.common_vcf} -O {output}"

rule CalculateContamination:
	input:
		tumor_table="path/to/output/{sample}_tumor_getpileupsummaries.table",
		normal_table="path/to/output/{sample}_normal_getpileupsummaries.table"
	output:
		table1=temp("path/to/output/{sample}_tumor_calculatecontamination.table"),
		table2=temp("path/to/output/{sample}_tumor_segments.table")
	shell:
		"gatk CalculateContamination -I {input.tumor_table} \
		-matched {input.normal_table} -O {output.table1} \
		-tumor-segmentation {output.table2}"

rule FilterMutectCalls:
	input:
		vcf="path/to/output/{sample}.somatic.m2.vcf.gz",
		contamination_table="path/to/output/{sample}_tumor_calculatecontamination.table",
		segmentation_table="path/to/output/{sample}_tumor_segments.table",
		fa="resources/Homo_sapiens_assembly38.fasta",
		read_orientation_model="path/to/output/{sample}.read-orientation-model.tar.gz"
	output:
		temp("path/to/output/{sample}.somatic.mt2.oncefiltered.vcf.gz")
	shell:
		"gatk FilterMutectCalls -R {input.fa} -V {input.vcf} \
		--tumor-segmentation {input.segmentation_table} \
		--contamination-table {input.contamination_table} \
		--ob-priors {input.read_orientation_model} -O {output}"

rule selectSNV:
	input:
		vcf="path/to/output/{sample}.somatic.mt2.oncefiltered.vcf.gz",
		fa="resources/Homo_sapiens_assembly38.fasta"
	output:
		"path/to/output/{sample}.somatic.mt2.SNVs.vcf.gz"
	shell:
		"gatk SelectVariants -R {input.fa} -V {input.vcf} \
		--select-type-to-include SNP -O {output}"

rule selectINDEL:
	input:
		vcf="path/to/output/{sample}.somatic.mt2.oncefiltered.vcf.gz",
		fa="resources/Homo_sapiens_assembly38.fasta"
	output:
		"path/to/output/{sample}.somatic.mt2.INDELs.vcf.gz"
	shell:
		"gatk SelectVariants -R {input.fa} -V {input.vcf} \
		--select-type-to-include INDEL -O {output}"

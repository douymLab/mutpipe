##MSIprofier
#This pipeline run MSIprofiler on given bam sample every chromosomes
#Then merge the MSIprofiler result and filter by (p value <0.01)&&(normal reads type <3)
#Get the final as the MSI site
import socket

chrs =[str(i) for i in range(1,22)]+["X","Y"]
sample_IDs, = glob_wildcards("path/to/input/{sample_id}.tumor.bam")
#https://github.com/parklab/MSIprofiler

# a pseudo-rule that collects the target files

rule all:
	input:
		expand("/path/to/output/MSI/{sample}.unphased_MSI.txt",sample=sample_IDs)

rule unphased_MSIprofiler_perchrmosome:
	input:
		bam="path/to/input/{sample}.tumor.bam",
		fasta="path/to/MSIprofiler/chrs_fa/",
		reference_set="path/to/MSIprofiler/reference_sets/"
	output:
		"path/to/output/result/{sample}/{sample}.{chrs}_unphased.txt"
	resources:
		mem_mb=12000
	shell:
		"python /storage/douyanmeiLab/lujinhong/tools/MSIprofiler/msi_profiler.py "
		"--tumor_bam {input.bam} "
		"--normal_bam bam_links_normal/{wildcards.sample}.normal.bam "
		"--bed None "
		"--chromosomes {wildcards.chrs} "
		"--fasta {input.fasta}/ "
		"--output_prefix path/to/output/result/{wildcards.sample}/{wildcards.sample}.{wildcards.chrs}"
		"--mode unphased "
		"--nprocs 2 "
		"--reference_set {input.reference_set}/ "
		"--min_coverage 8 "
		"--min_MS_length 6 "
		"--flank_size 5 "
		"--rus 1 2 3 4 5 6 "

rule merge_result:
	input:
		expand("path/to/output/result/{sample}/{sample}.{chrs}_unphased.txt",sample=sample_IDs,chrs=chrs)
	output:
		"path/to/output/MSI/{sample}.unphased.txt"
	shell:
		"cat {input} >> {output}"

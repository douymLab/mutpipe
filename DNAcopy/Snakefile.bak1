##GATK: v4.2.2.0
import socket
shell.prefix("module load gcc; module load jdk/11.0.10; source ~/.bashrc; source /storage/douyanmeiLab/lulu/tools/miniconda3/etc/profile.d/conda.sh; conda activate mutpipe; module load samtools/1.13;module load R/4.1.2")
sample_IDs, =glob_wildcards("bam_links/tumor/{sample}.tumor.bam")
#sample_IDs = "YZ_017"
# a pseudo-rule that collects the target files
rule all:
	input:
		expand("depth/{sample}.tumor.depth.regions.bed.gz",sample=sample_IDs),
		expand("depth/{sample}.normal.depth.regions.bed.gz",sample=sample_IDs),
		expand("depth/{sample}.tumor.depth.log",sample=sample_IDs),
		expand("depth/{sample}.normal.depth.log",sample=sample_IDs),
		expand("depth/{sample}.regions.depth",sample=sample_IDs),
		expand("depth/{sample}.depth.regions.logratio.bed",sample=sample_IDs),
		expand("result/{sample}.CNVs",sample=sample_IDs),

rule mosdepth_tumor:
        input:
                bam="bam_links/tumor/{sample}.tumor.bam"
        output:
                region_bed_gz="depth/{sample}.tumor.depth.regions.bed.gz"
        params:
                depth="depth/{sample}.tumor.depth"
        shell:
                """
                mosdepth --fast-mode --by 50000 {params.depth} {input.bam}
                """
rule mosdepth_normal:
        input:
                bam="bam_links/normal/{sample}.normal.bam"
        output:
                region_bed_gz="depth/{sample}.normal.depth.regions.bed.gz",
        params:
                depth="depth/{sample}.normal.depth"
        shell:
                """
                mosdepth --fast-mode --by 50000 {params.depth} {input.bam}
                """
rule gunzip:
	input:
		tumor_depth="depth/{sample}.tumor.depth.regions.bed.gz",
		normal_depth="depth/{sample}.normal.depth.regions.bed.gz"
	output:
		tumor_depth="depth/{sample}.tumor.depth.regions.bed",
		normal_depth="depth/{sample}.normal.depth.regions.bed",
		tumor_depth_log="depth/{sample}.tumor.depth.log",
		normal_depth_log="depth/{sample}.normal.depth.log",
	shell:
		"""
		gzip -kd {input.tumor_depth} > {output.tumor_depth_log}
		gzip -kd {input.normal_depth}> {output.normal_depth_log}
		"""
rule paste:
	input:
		tumor_depth_log="depth/{sample}.tumor.depth.log",
		normal_depth_log="depth/{sample}.normal.depth.log",
		tumor_depth="depth/{sample}.tumor.depth.regions.bed",
		normal_depth="depth/{sample}.normal.depth.regions.bed"
	output:
		depth="depth/{sample}.regions.depth"
	shell:
		"""
		paste -d '\\t' {input.tumor_depth} {input.normal_depth} > {output.depth}
		"""
rule log_ratio:
	input:
		depth="depth/{sample}.regions.depth"
	output:
		log_ratio="depth/{sample}.depth.regions.logratio.bed"
	shell:
		"""
		awk '{{printf "%s\\t%s\\t%s\\t%f\\n",$1,$2,$3,log($4/($8+0.00001))/log(2)}}' {input.depth} >{output.log_ratio}
		"""
rule filter_chr:
	input:
		bed="depth/{sample}.depth.regions.logratio.bed"
	output:
		bed="depth/{sample}.depth.regions.logratio.mainchr.bed"
	shell:
		"""
		awk -F "\\t" '{{if(length($1)<=5 && $1!="chrM") print}}' {input.bed} > {output.bed} 
		"""
rule DNAcopy:
	input:
		log_ratio="depth/{sample}.depth.regions.logratio.mainchr.bed"
	output:
		cnv="result/{sample}.CNVs",
		mapd="result/{sample}.mapd"
	params:
		sample="{sample}",
		dir="result/"
	shell:
		"""
		cat ~/tools/DNAcopy/DNAcopy.R |R --slave --args {params.sample} {input.log_ratio} {params.dir}
		"""

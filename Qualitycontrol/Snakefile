##GATK: v4.2.2.0
#import socket
sample_IDs, =glob_wildcards("demo/{id}.tumor.bam")
type_IDs=["tumor","normal"]
# a pseudo-rule that collects the target files
rule all:
	input:
		expand("demo/bam_stats/{sample}/{sample}.{type}.stats",sample=sample_IDs, type=type_IDs),
		expand("demo/bam_stats/{sample}/{sample}.{type}.flagstats",sample=sample_IDs, type=type_IDs),
		"demo/allsamples_statistics.list",
		"demo/allsample_contamination"

rule depth_tumor:
	input:
		tumor_bam="demo/{sample}.tumor.bam",
		bed="resources/S31285117_Regions.bed"
	output:
		"demo/depth/{sample}.tumor.depth"
	shell:
		"samtools depth -b {input.bed} {input.tumor_bam} > {output}"

rule depth_normal:
	input:
		normal_bam="demo/{sample}.normal.bam",
		bed="resources/S31285117_Regions.bed"
	output:
		"demo/depth/{sample}.normal.depth"
	shell:
		"samtools depth -b {input.bed} {input.normal_bam} > {output}"

rule summarizedepth_customizedscript:
	input:
		expand("demo/depth/{sample}.{type}.depth",sample=sample_IDs,type=type_IDs)
	output:
		"demo/allsamples_statistics.list"
	params:
		"demo"
	resources:
		mem_mb=50000
	shell:
		"python depth_statistics.py {params}"

rule samtools_stats_tumor:
	input:
		bam="demo/{sample}.tumor.bam",
		bed="resources/S31285117_Regions.bed",
		fa="resources/Homo_sapiens_assembly38.fasta"
	output:
		"demo/bam_stats/{sample}/{sample}.tumor.stats"
	shell:
		"samtools stats -t {input.bed} -r {input.fa} {input.bam} > {output}"

rule samtools_stats_normal:
	input:
		bam="demo/{sample}.normal.bam",
		bed="resources/S31285117_Regions.bed",
		fa="resources/Homo_sapiens_assembly38.fasta"
	output:
		"demo/bam_stats/{sample}/{sample}.normal.stats"
	shell:
		"samtools stats -t {input.bed} -r {input.fa} {input.bam} > {output}"

rule samtools_flagstats_tumor:
	input:
		bam="demo/{sample}.tumor.bam"
	output:
		"demo/bam_stats/{sample}/{sample}.tumor.flagstats"
	shell:
		"samtools flagstats -@ 1 -O tsv {input} > {output}"

rule samtools_flagstats_normal:
	input:
		bam="demo/{sample}.normal.bam"
	output:
		"demo/bam_stats/{sample}/{sample}.normal.flagstats"
	shell:
		"samtools flagstats -@ 1 -O tsv {input} > {output}"

rule GetPileupSummaries_tumor:
	input:
		tumor_bam="demo/{sample}.tumor.bam",
		tumor_index="demo/{sample}.tumor.bam.bai",
		common_vcf="resources/small_exac_common_3.hg38.vcf.gz"
	output:
		"demo/table/{sample}_tumor_getpileupsummaries.table"
	shell:
		"gatk GetPileupSummaries -I {input.tumor_bam} -V {input.common_vcf} -L {input.common_vcf} -O {output}"

rule GetPileupSummaries_normal:
	input:
		normal_bam="demo/{sample}.normal.bam",
		normal_index="demo/{sample}.normal.bam.bai",
		common_vcf="resources/small_exac_common_3.hg38.vcf.gz"
	output:
		"demo/table/{sample}_normal_getpileupsummaries.table"
	shell:
		"gatk GetPileupSummaries -I {input.normal_bam} -V {input.common_vcf} -L {input.common_vcf} -O {output}"

rule CalculateContamination:
	input:
		tumor_table="demo/table/{sample}_tumor_getpileupsummaries.table",
		normal_table="demo/table/{sample}_normal_getpileupsummaries.table"
	output:
		table1="demo/table/{sample}_tumor_calculatecontamination.table",
		table2="demo/table/{sample}_tumor_segments.table"
	shell:
		"gatk CalculateContamination -I {input.tumor_table} -matched {input.normal_table} -O {output.table1} -tumor-segmentation {output.table2}"

rule summarizeContamination:
	input:
		expand("demo/table/{sample}_tumor_calculatecontamination.table",sample=sample_IDs)
	output:
		"demo/allsample_contamination"
	shell:
		"cat {input}|awk '!x[$0]++' >> {output}"

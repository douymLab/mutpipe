##GATK: v4.1.0.0
import socket
#shell.prefix("module load gcc; module load java; source /storage/douyanmeiLab/yanmei/tools/miniconda3/etc/profile.d/conda.sh; conda activate base; ")
#https://gatk.broadinstitute.org/hc/en-us/articles/360035889791--How-to-Call-somatic-mutations-using-GATK4-Mutect2-Deprecated-
#https://gatk.broadinstitute.org/hc/en-us/articles/360035531132
#sample_IDs, =glob_wildcards("/storage/douyanmeiLab/TCGA_wu/WES_rawdata/tumor/{id}T_tumor_1.fq.gz")
sample_IDs, =glob_wildcards("test/{id}T_tumor_1.fq.gz")

# a pseudo-rule that collects the target files
rule all:
	input:
		expand("artifacts/{sample}_tumor_artifact",sample=sample_IDs),
		expand("vcfs/{sample}.somatic.mt2.oncefiltered.vcf.gz",sample=sample_IDs)

rule MT2:
	input:
		fa="/storage/douyanmeiLab/yanmei/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa",
		tumor_bam="bam_links_tumor/{sample}.tumor.bam",
		normal_bam="bam_links_control/{sample}.control.bam",
		interval="/storage/douyanmeiLab/TCGA_wu/resources/Agilent_SureSelect_V7/S31285117_Padded.list",
		germline_resource="/storage/douyanmeiLab/yanmei/resources/af-only-gnomad.hg38.vcf.gz",
		PON="/storage/douyanmeiLab/yanmei/resources/1000g_pon.hg38.vcf.gz"
	output:
		vcf="vcfs/{sample}.somatic.m2.vcf.gz",
		f1r2="vcfs/{sample}.f1r2.tar.gz",
		bamout="vcfs/{sample}.tumor_vs_normal.bam"
	shell:
		"gatk Mutect2 -R {input.fa} -I {input.tumor_bam} -I {input.normal_bam} -normal {wildcards.sample}_normal -tumor {wildcards.sample}_tumor --germline-resource {input.germline_resource} --pon {input.PON} -L {input.interval} --interval-padding 100 --af-of-alleles-not-in-resource 0.0001 --disable-read-filter MateOnSameContigOrNoMappedMateReadFilter -O {output.vcf} --f1r2-tar-gz {output.f1r2} -bamout {output.bamout}"


rule GetPileupSummaries_tumor:
	input:
		tumor_bam="bam_links_tumor/{sample}.tumor.bam",
		common_vcf="/storage/douyanmeiLab/yanmei/resources/small_exac_common_3.hg38.vcf.gz"
	output:
		"{sample}_tumor_getpileupsummaries.table"
	shell:
		"gatk GetPileupSummaries -I {input.tumor_bam} -V {input.common_vcf} -L {input.common_vcf} -O {output}"

rule GetPileupSummaries_normal:
	input:
		normal_bam="bam_links_control/{sample}.control.bam",
		common_vcf="/storage/douyanmeiLab/yanmei/resources/small_exac_common_3.hg38.vcf.gz"
	output:
		"{sample}_normal_getpileupsummaries.table"
	shell:
		"gatk GetPileupSummaries -I {input.normal_bam} -V {input.common_vcf} -L {input.common_vcf} -O {output}"


rule CalculateContamination:
	input:
		tumor_table="{sample}_tumor_getpileupsummaries.table",
		normal_table="{sample}_normal_getpileupsummaries.table"
	output:
		table1="{sample}_tumor_calculatecontamination.table",
		table2="{sample}_tumor_segments.table"
	shell:
		"gatk CalculateContamination -I {input.tumor_table} -matched {input.normal_table} -O {output.table1} -tumor-segmentation {output.table2}"

rule FilterMutectCalls:
	input:
		vcf="vcfs/{sample}.somatic.m2.vcf.gz",
		contamination_table="{sample}_tumor_calculatecontamination.table",
		segmentation_table="{sample}_tumor_segments.table",
		fa="/storage/douyanmeiLab/yanmei/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa",
		f1r2="vcfs/{sample}.f1r2.tar.gz"
	output:
		"vcfs/{sample}.somatic.mt2.oncefiltered.vcf.gz"
	shell:
		"gatk FilterMutectCalls -R {input.fa} -V {input.vcf} --tumor-segmentation {input.segmentation_table} --contamination-table {input.contamination_table} --ob-priors {input.f1r2} -O {output}"

rule collect_artifact:
	input:
		tumor_bam="bam_links_tumor/{sample}.tumor.bam",
		fa="/storage/douyanmeiLab/yanmei/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa"
	output:
		"artifacts/{sample}_tumor_artifact"
	shell:
		"gatk CollectSequencingArtifactMetrics -I {input.tumor_bam} â€“-FILE_EXTENSION \".txt\"  -R {input.fa} -O {output}"
